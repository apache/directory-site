<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apacheds on Apache Directory</title>
    <link>https://directory.apache.org/apacheds.html</link>
    <description>Recent content in Apacheds on Apache Directory</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://directory.apache.org/apacheds/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://directory.apache.org/apacheds/internal-design-guide/ppolicy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/internal-design-guide/ppolicy.html</guid>
      <description>aci : 10 adminRole: 3 alias: 4 authn: 9 authz: 2 backend: 2 build: 1 changepw: 1 config: 1 control: 5 core: 9 core-integ: 2 dhcp: 2 doc: 2 extop: 1 hash interceptor: 1 http: 1 index: 2 installer: 24 installer-plugin: 5 jdbm: 27 jdk: 1 ldap: 25 mavibot: 6 network: 2 persistent search: 2 ppolicy: 17 pwd interceptor: 1 referral: 1 replication: 20 schema: 9 script: 1 search: 10 security: 2 sp: 1 test: 1 upgrade: 5</description>
    </item>
    
    <item>
      <title>0 - Community</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/0-community.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/0-community.html</guid>
      <description>0 - Community This chapter explains how to work with the community around the project. The ASF is a community of volunteers, most of them working out of their working time to get the best possible software available to the users, for free.
As a community, we appreciate feedbacks, bug reports, even criticisms, but we value contributions as the best way to make this collaborative work a better software.
Table of content  0.</description>
    </item>
    
    <item>
      <title>0.1 - Reporting Bugs</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/0.1-reporting-bugs.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/0.1-reporting-bugs.html</guid>
      <description>0.1 - Reporting Bugs So you found a bug in ApacheDS. Don&amp;rsquo;t worry this is a good thing! We can fix it but need your help. There are different degrees to your ability to help out. Some of you have developer skills so you might be able to write a test case that pin points that bug.
This wiki page shows you how you can help us to help you.</description>
    </item>
    
    <item>
      <title>0.2 - Building Trunks</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/0.2-building-trunks.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/0.2-building-trunks.html</guid>
      <description>0.2 - Building Trunks This page give some information about the layout of Apache DS 2.0 trunks, and try to explain how it is built.
 Project Hierarchy  Project project Checkstyle-Configuration project   Junit-Addons project  Apache Directory LDAP API project (formerly known as &amp;ldquo;Shared&amp;rdquo;) JDBM project ApacheDS project   Prerequisites for building  Maven JDK 5   Getting the code Building the trunks  Building the trunks   Running the server without building installers Building the installers Starting the server without installation Eclipse  Building eclipse files Maven settings Eclipse hints Coding standards     Project Hierarchy The server is a composition of many projects, which should be built in a given order, assuming you want to build the trunk.</description>
    </item>
    
    <item>
      <title>0.3 - Contributing</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/0.3-contributing.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/0.3-contributing.html</guid>
      <description>0.3 - Contributing Join the Apache Directory Community The Apache Directory Project is an Open Source volunteer project under the auspices of The Apache Software Foundation (ASF). We welcome your input and contributions - either with direct participation (coding, documenting, answering questions, proposing ideas, reporting bugs, suggesting bug-fixes, etc..). You can also contribute to The Apache Software Foundation (ASF) by resource donations (money, time, publicity, hardware, software, conference presentations, speeches, etc&amp;hellip;) of through the sponsorship program .</description>
    </item>
    
    <item>
      <title>1 - Architecture</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/1-architecture.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/1-architecture.html</guid>
      <description>1 - Architecture We will now describe the server architecture, in order to give you a more deeper understanding of the way the server works.
Chapter content  1.1 - Architectural Overview 1.2 - Network Layer 1.3 - Directory-Service 1.4 - Interceptors 1.5 - Backend  </description>
    </item>
    
    <item>
      <title>1 - How To Begin</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1-how-to-begin.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1-how-to-begin.html</guid>
      <description>1 - How to begin This chapter helps you to set up a server, with the minimal configuration options being explained. That should be enough to get a running server.
This user guide is not intended to be a LDAP guide : there are some excellent tutorials or books, we won&amp;rsquo;t try to challenge them !
Table of content  1.1 - What Apache Directory Server is 1.2 - Some Background.</description>
    </item>
    
    <item>
      <title>1 - What is Kerberos ?</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1-kerberos.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1-kerberos.html</guid>
      <description>Table of content  1.1 - Introduction  1.1.1 - Realms 1.1.2 - Principal 1.1.3 - Keys 1.1.4 - KDC (Key Distribution Center) 1.1.5 - Database 1.1.6 - AS (Authentication Server) 1.1.7 - TGS (Ticket Granting Server) 1.1.8 - Tickets   1.2 - Resources  1.2.1 - Kerberos Articles 1.2.2 - Microsoft compatibility 1.2.3 - Standards    1 - What is Kerberos ? Kerberos is the result of an effort by the MIT, known as Project Athena.</description>
    </item>
    
    <item>
      <title>1.1 - Architecture Overview</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/1.1-architecture-overview.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/1.1-architecture-overview.html</guid>
      <description>1.1 - Architecture Overview The Apache Directory Server (aka ApacheDS) architecture has many different layers. The following schema expose the most important ones :
As we can see, we distinguish four different layers :
 the network the Session the PartitionNexus the Backends  We will describe in detail those layers in the following chapters.</description>
    </item>
    
    <item>
      <title>1.1 - Introduction</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1-introduction.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1-introduction.html</guid>
      <description>Table of content  1.1.1 - Realms 1.1.2 - Principal 1.1.3 - Keys 1.1.4 - KDC (Key Distribution Center) 1.1.5 - Database 1.1.6 - AS (Authentication Server) 1.1.7 - TGS (Ticket Granting Server) 1.1.8 - Tickets  1.1 - Introduction The Kerberos server is a part of the Apache Directory Server : it uses the LDAP server as a backend, but has its own network layer. which makes it easy to install, compared to other solutions where you have two components : a backend(typically an LDAP server) on one side, and the Kerberos Server on the other.</description>
    </item>
    
    <item>
      <title>1.1 - What Apache DS is</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.1-what-apacheds-is.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.1-what-apacheds-is.html</guid>
      <description>1.1 - What Apache Directory Server is This section describes what Apache Directory Server (abbreviated ApacheDS) is, and where it comes from.
 System vision  Architectural overview   Origin and Motives Resources   System vision ApacheDS 2.0 is an embeddable, extendable, standards compliant, modern LDAP server written entirely in Java, and available under the Apache Software License. Other network protocols like Kerberos and NTP are supported as well (and even more may be added), but basically (and especially for this introduction guide) ApacheDS is an LDAP server.</description>
    </item>
    
    <item>
      <title>1.1.1 - Realms</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1.1-realms.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1.1-realms.html</guid>
      <description>1.1.1 - Realms A Realm is associated with a Kerberos administrative domain. In other words, it covers everything the Kerberos server manages :
 Users Services  Note that a Kerberos Server manages one Realm only, a Realm can be managed by more than one Kerberos server : this is mandatory to avoid a single point of failure, if a Kerberos server halts for any reason.
Realm name In order to distinguish the Realms, we give them a unique name.</description>
    </item>
    
    <item>
      <title>1.1.2 - Principals</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1.2-principals.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1.2-principals.html</guid>
      <description>1.1.2 - Principals The Kerberos Principal is any entity to which the server can assign a Ticket. Typically, we can think of three kinds of Principals :
* Users * Services * Hosts  Each Principal is unique in the Kerberos database. This is the way we identify the entity.
A Kerberos Principal is a combination of three parts :
* the name (the primary) * an optional instance * the realm they are associated with  The optional instance is used to provide more than one role to an entity, without having to create N Principals for a single user (an administrator is also a normal user, and it&amp;rsquo;s good to qualify the user by adding his admin qualificiation in one Principal to create a new and easy to remember Principal)</description>
    </item>
    
    <item>
      <title>1.1.3 - Keys</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1.3-keys.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1.3-keys.html</guid>
      <description>1.1.3 - Keys The Kerberos server generates keys based on the password we provide. Those keys are stored in the server and used to encrypt and decrypt the data being exchanged with the client.
The Key is computed using either the user&amp;rsquo;s password or a random value, and is salted with the realm.
Using the realm as the salt offers a level of protection : if one&#39;s key is broken on a realm, that does not mean the password is compromised.</description>
    </item>
    
    <item>
      <title>1.1.4 - KDC (Key Distribution Center)</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1.4-kdc.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1.4-kdc.html</guid>
      <description>1.1.4 - KDC (Key Distribution Center) The KDC contains three components :
 an Authentication Service a Ticket Granting Service a database (ApacheDS)  The KDC role is to authenticate users and distribute tickets based on the information stored in its database.
The Apache Kerberos Server contains all these three components and hence is a KDC.
We could allow the **Kerberos Server** to manage more than one **KDC**, but this is not currently possible.</description>
    </item>
    
    <item>
      <title>1.1.5 - Database</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1.5-database.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1.5-database.html</guid>
      <description>1.1.5 - Database This is the place where all the private keys are stored. It is very common to store all the keys in an LDAP server, even more natural when the Kerberos server is a part of an existing LDAP server, like *Apache Directory Server !
When Apache Directory Server was started, it was also thought as a repository for Kerberos keys, so we just had to develop the logic to manage those keys, and the Kerberos protocol.</description>
    </item>
    
    <item>
      <title>1.1.6 - AS (Authentication Server)</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1.6-as.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1.6-as.html</guid>
      <description>1.1.6 - AS (Authentication Server) One of the two server components of a Kerberos server is the Authentication Server, which authenticates clients, and issues tickets (TGT, or Ticket Granting Ticket) that the user can send to the TGS to get a service ticket.
The TGT, or Ticket Granting Ticket, is a ticket that a client can use to get a service ticket. In fact, the authentication server considers the TGS as just another service, and generates a ticket for the user to access this service.</description>
    </item>
    
    <item>
      <title>1.1.7 - TGS (Ticket Granting Server)</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1.7-tgs.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1.7-tgs.html</guid>
      <description>1.1.7 - TGS (Ticket Granting Server) The second major service is the Ticket Granting Server, which is the service that delivers tickets for all the managed services to the users.
A client can access to this service fater having been authenticated - ie, after having received a ticket allowing it to access the TGS from the AS -.
At this point, all the exchanges are encrypted using the user session key.</description>
    </item>
    
    <item>
      <title>1.1.8 - Tickets</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.1.8-tickets.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.1.8-tickets.html</guid>
      <description>1.1.8 - Tickets All the kerberos system is based on the dstribution of tickets.
A Ticket is an encrypted data generated by the Kerberos Server and used by a service. It gives the right for a user to access a service, assuming the service can decrypt the ticket.
It also contains many other fields, like the ticket&amp;rsquo;s expiration date, for instance.
What&amp;rsquo;s inside a Ticket ? Here are the information that can be found in a ticket.</description>
    </item>
    
    <item>
      <title>1.2 - Newtork Layer</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/1.2-network.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/1.2-network.html</guid>
      <description>1.2 - Network Layer This layer is the part the user connects to when he wants to obtain some data from the server. This is not a mandatory part of the server : we don&amp;rsquo;t need to use it when the server is embedded.
We offer more than just LDAP protocol, the server also include various protocols :
 Kerberos NTP DHCP DNS ChangePassword  Not all of them are implemented in the current version, but at least the Kerberos server is available.</description>
    </item>
    
    <item>
      <title>1.2 - Resources</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.2-resources.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.2-resources.html</guid>
      <description>Table of content  1.2.1 - Kerberos Articles 1.2.2 - Microsoft compatibility 1.2.3 - Standards  </description>
    </item>
    
    <item>
      <title>1.2 - Some Background. Directories, directory services and LDAP</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.2-some-background.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.2-some-background.html</guid>
      <description>1.2 - Some Background. Directories, directory services and LDAP This section provides a brief overview about directories, directory services and LDAP. Furthermore you find links to different resources (books, online resources, &amp;hellip;), which may act as introduction to the topic. If you are already an LDAP expert, you&amp;rsquo;ll probably skip this section.
 Directories and directory services LDAP &amp;ndash; the Lightweight Directory Access Protocol  What is it? Some history. Information model primer Common applications of LDAP based directories Examples of software components which support LDAP   LDAP resources  Books Articles, forums, blogs and other online resources     Directories and directory services Generally speaking, a directory is a collection or list of data.</description>
    </item>
    
    <item>
      <title>1.2.1 - Kerberos Articles</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.2.1-kerberos-articles.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.2.1-kerberos-articles.html</guid>
      <description>1.2.1 - Kerberos Articles Here are some articles that are interesting to read :
  Centralized Authentication with Kerberos 5, Part I
  Centralized Authorization Using a Directory Service, Part II
  </description>
    </item>
    
    <item>
      <title>1.2.2 - Microsoft Compatibility</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.2.2-microsoft-compatibility.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.2.2-microsoft-compatibility.html</guid>
      <description>1.2.2 - Microsoft Compatibility Some articles to expose the way Kerberos is used by Microsoft ™ :
  HTTP-Based Cross-Platform Authentication via the Negotiate Protocol
  RFC 2478 - The Simple and Protected GSS-API Negotiation Mechanism
  </description>
    </item>
    
    <item>
      <title>1.2.3 - Standards</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/1.2.3-standards.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/1.2.3-standards.html</guid>
      <description>1.2.3 - Standards The Kerberos Protocol is based on public RFCs. There is also a Kerberos woking group at the IETF, you can check this page.
Obsoleted RFCs  RFC 1411 - Telnet Authentication: Kerberos Version 4 RFC 1510 - The Kerberos Network Authentication Service (V5) (Obsoleted by 4120, 6649)  Valid RFS and updates  RFC 1964 - The Kerberos Version 5 GSS-API Mechanism (updated by 4121, 6649) RFC 2623 - NFS Version 2 and Version 3 Security Issues and the NFS Protocol&amp;rsquo;s Use of RPCSEC_GSS and Kerberos V5 RFC 2712 - Addition of Kerberos Cipher Suites to Transport Layer Security (TLS) RFC 2942 - Telnet Authentication: Kerberos Version 5 RFC 3244 - Microsoft Windows 2000 Kerberos Change Password and Set Password Protocols RFC 3961 - Encryption and Checksum Specifications for Kerberos 5 RFC 3962 - Advanced Encryption Standard (AES) Encryption for Kerberos 5 RFC 4120 - The Kerberos Network Authentication Service (V5) (Updated by 4537, 5021, 5896, 6111, 6112, 6113, 6649, 6806) RFC 4121 - The Kerberos Generic Security Service Application Program Interface (GSS-API) Mechanism: Version 2 (Updated by 6112, 6542, 6649) RFC 4402 - A Pseudo-Random Function (PRF) for the Kerberos V Generic Security Service Application Program Interface (GSS-API) Mechanism RFC 4537 - Kerberos Cryptosystem Negotiation Extension RFC 4556 - Public Key Cryptography for Initial Authentication in Kerberos (PKINIT) (updated by 6612) RFC 4557 - Online Certificate Status Protocol (OCSP) Support for Public Key Cryptography for Initial Authentication in Kerberos (PKINIT) RFC 4559 - SPNEGO-based Kerberos and NTLM HTTP Authentication in Microsoft Windows RFC 4752 - The Kerberos V5 (&amp;ldquo;GSSAPI&amp;rdquo;) Simple Authentication and Security Layer (SASL) Mechanism RFC 4757 - The RC4-HMAC Kerberos Encryption Types Used by Microsoft Windows (updated by 6649) RFC 5021 - Extended Kerberos Version 5 Key Distribution Center (KDC) Exchanges over TCP RFC 5179 - Generic Security Service Application Program Interface (GSS-API) Domain-Based Service Names Mapping for the Kerberos V GSS Mechanism RFC 5349 - Elliptic Curve Cryptography (ECC) Support for Public Key Cryptography for Initial Authentication in Kerberos (PKINIT) RFC 5868 - Problem Statement on the Cross-Realm Operation of Kerberos RFC 5896 - Generic Security Service Application Program Interface (GSS-API): Delegate if Approved by Policy RFC 6111 - Additional Kerberos Naming Constraints RFC 6112 - Anonymity Support for Kerberos RFC 6113 - A Generalized Framework for Kerberos Pre-Authentication RFC 6251 - Using Kerberos Version 5 over the Transport Layer Security (TLS) Protocol RFC 6448 - The Unencrypted Form of Kerberos 5 KRB-CRED Message RFC 6542 - Kerberos Version 5 Generic Security Service Application Program Interface (GSS-API) Channel Binding Hash Agility RFC 6560 - One-Time Password (OTP) Pre-Authentication RFC 6649 - Deprecate DES, RC4-HMAC-EXP, and Other Weak Cryptographic Algorithms in Kerberos RFC 6784 - Kerberos Options for DHCPv6 RFC 6803 - Camellia Encryption for Kerberos 5 RFC 6806 - Kerberos Principal Name Canonicalization and Cross-Realm Referrals  Here are some drafts :  draft-burgin-kerberos-aes-cbc-hmac-sha2 - AES Encryption with HMAC-SHA2 for Kerberos 5 draft-burgin-kerberos-suiteb - Suite B Profile for Kerberos 5 draft-ietf-kitten-kerberos-iana-registries - Move Kerberos protocol parameter registries to IANA draft-ietf-krb-wg-cammac - Kerberos Authorization Data Container Authenticated by Multiple MACs draft-ietf-krb-wg-kdc-model - An information model for Kerberos version 5 draft-ietf-krb-wg-pkinit-alg-agility - PKINIT Algorithm Agility draft-perez-krb-wg-gss-preauth - GSS-API pre-authentication for Kerberos draft-perez-krb-wg-gss-preauth-02  </description>
    </item>
    
    <item>
      <title>1.3 - DirectoryService</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/1.3-directory-service.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/1.3-directory-service.html</guid>
      <description>1.3 - DirectoryService The DirectoryService is the core of the server. This is where we process incoming requests and ask the backend for data.
It has an entry point, the OperationManager, which is in charge of pushing the requests into the Interceptors chain, and to protect the server against concurrent modifications.
Then the request is going through every Interceptor being registered for this operation. When we have gone through all the Interceptors, we have reached the PartitionNexus, which is the connection with the backends.</description>
    </item>
    
    <item>
      <title>1.3 - Installing and starting the server</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.3-installing-and-starting.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.3-installing-and-starting.html</guid>
      <description>1.3 - Installing and starting the server This section describes how ApacheDS can be installed and started on different platforms.
 Prerequisites Download a server installer     Starting and stopping the server   Installation on Mac OS X  Starting and stopping the server   Installation on Linux   Prerequisites  Java 8. We recommend AdoptOpenJDK.  You can check your java installation with:</description>
    </item>
    
    <item>
      <title>1.4 - Basic configuration tasks</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.4-basic-configuration-tasks.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.4-basic-configuration-tasks.html</guid>
      <description>1.4 - Basic configuration tasks In this chapter, we will explain how to configure some basic parameters in the server you just installed. We won&amp;rsquo;t expose all the options in this Basic User Guide, you can check in the Advanced User Guide for more options if needed.
Table of content  1.4.1 - Changing the server port for LDAP 1.4.2 - Changing the admin password 1.4.3 - Adding your own partition 1.</description>
    </item>
    
    <item>
      <title>1.4 - Interceptors</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/1.4-interceptors.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/1.4-interceptors.html</guid>
      <description>1.4 - Interceptors Interceptors are functional layers inside the DirectoryService. Each one of them are responsible for a specific task. They are ordered, and this order is not to be changed.
Each operation received by the DirectoryService will be processed by various interceptors, one after the other, down to the backend, and again when the result comes back to the caller. An interceptor can call the next interceptor, whcih will be determinated by the position it has in the chain of interceptors, or simply return.</description>
    </item>
    
    <item>
      <title>1.4.1 - Changing the server port for LDAP</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.4.1-changing-server-port.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.4.1-changing-server-port.html</guid>
      <description>1.4.1 - Changing the server port for LDAP This section describes how to change to port for the LDAP protocol. There are two ways to do that : either you use the configuration plugin available in Apache Directory Studio, or you update the LDIF partition that contains the configuration.
 The task and how to accomplish it  Using Apache Directory Studio Modifying the configuration LDIF partition     The task and how to accomplish it By default the LDAP server listens on port 10389 (unencrypted or StartTLS) and 10636 (SSL).</description>
    </item>
    
    <item>
      <title>1.4.2 - Changing the admin password</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.4.2-changing-admin-password.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.4.2-changing-admin-password.html</guid>
      <description>1.4.2 - Changing the admin password This section describes the steps necessary to change the administrator password. Follow the instructions provided here step by step.
 Step one: Changing the value in the system partition Step two: Verification Resources   Step one: Changing the value in the system partition While the server is up and running, change the value of the userPassword attribute of the admin (uid=admin,ou=system) via LDAP. There are several ways to accomplish this task.</description>
    </item>
    
    <item>
      <title>1.4.3 - Adding your own partition</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.4.3-adding-partition.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.4.3-adding-partition.html</guid>
      <description>1.4.3 - Adding your own partition This section describes how to add your own data partition.
 What are partitions? Minimal partition definition Adding a partition programmatically More configuration options for a JDBM partition Adding a partition manually  Before starting the server With ldapmodify to a running server     What are partitions? In ApacheDS entries are stored in partitions. Each partition contains a complete entry tree, also referred to as a DIT.</description>
    </item>
    
    <item>
      <title>1.4.4 - Configure logging</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.4.4-configure-logging.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.4.4-configure-logging.html</guid>
      <description>1.4.4 - Configure logging In order to detect and analyze problems, adjusting the log level of a server can be a valuable tool. This section describes how to configure logging within a standalone ApacheDS.
 ApacheDS and logging Default behavior after installation Adjusting logging to your needs  Log file location (where the log files are placed) Log level (how detailed the logs are) Format for log messages Advanced log4j configuration   Example configurations Log settings of the Windows service Resources   ApacheDS and logging ApacheDS 2.</description>
    </item>
    
    <item>
      <title>1.4.5 - Enable and disable anonymous access</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.4.5-anonymous-access.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.4.5-anonymous-access.html</guid>
      <description>1.4.5 - Enable and disable anonymous access This section briefly describes how to enable and disable anonymous access.
Anonymous access to the server is enabled by default. This includes read and write access!
You can disable anonymous binds by changing the value for property allow Anonymous Access in the server configuration screen :
A restart of the server is necessary for this change to take effect. Afterwards, all clients have to provide their name (distinguished name) and password in order to bind to the directory service.</description>
    </item>
    
    <item>
      <title>1.5 - Backend</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/1.5-backend.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/1.5-backend.html</guid>
      <description>1.5 - Backend The Backend is the part of the server responsible for storing data in a way we can easily retrieve them. This storage does not necessarily have to be remanent : we can have a in-memory backend.
Existing Backends We currently have 3 different backends :
 JDBM LDIF In-Memory  JDBM Backend The JDBM backend is storing data on disk, using BTrees. It&amp;rsquo;s fast when it comes to retrieve data, slow when you have to add them.</description>
    </item>
    
    <item>
      <title>1.5. - About the sample configurations and sample directory data</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.5-sample-configuration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.5-sample-configuration.html</guid>
      <description>1.5. - About the sample configurations and sample directory data This section describes basic parameters used throughout the examples in this guide. It also introduces the sample directory &amp;ldquo;Sailors of the seven seas&amp;rdquo;, and other requisites you need.
 Basic server parameters LDAP Clients The sample data (Sailors of the seven seas)   Basic server parameters In the following sections we assume that you will install, configure and run Apache Directory Server on a host with the following host name using the parameters given in the following table:</description>
    </item>
    
    <item>
      <title>1.6. - Backup/Restore</title>
      <link>https://directory.apache.org/apacheds/basic-ug/1.6-backup-restore.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/1.6-backup-restore.html</guid>
      <description>1.6. - Backup/Restore You may want to save your data in a safe place, and be able to restore them.
ApacheDS stores its data into a set of files, which are binary files. You can&amp;rsquo;t simply copy those files in a backup directory, because there is no guarantee that their state is consistant when you do a copy (unless you have stopped the server while doing so) : one update operation might be running when you do a copy, and unless this update has been completed, the database is nt in a stable state.</description>
    </item>
    
    <item>
      <title>2 - Handling of data within your directory</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2-handling-data.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2-handling-data.html</guid>
      <description>2 - Handling data within your directory Now that your server is up and running, you can use it to add, modify, remove and search entries. You can also manage its schema, extending it to fit your needs.
Table of content  2.1 - Data modification  2.1.1 - Adding Entries 2.1.2 - Deleting Entries   2.2 - Searching Data  2.2.1 - Simple search 2.2.2 - More search options   2.</description>
    </item>
    
    <item>
      <title>2 - Kerberos Configuration</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/2-kerberos-config.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/2-kerberos-config.html</guid>
      <description>Table of content  2.1 - Installing the server 2.2 - LDAP server configuration 2.3 - Kerberos server configuration 2.4 - Kerberos and Unlimited Strength Policy 2.5 - PKINIT 2.6 - Cross Realm  2 - Kerberos Configuration TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>2 - Server Configuration</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/2-server-config.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/2-server-config.html</guid>
      <description>2 - Server Configuraion We will now describe the server configuration. Usually, all the configuration changes are done using Apache Directory Studio, which offers a pretty GUI. One can also update server configuration using LDAP operations, as the configuration is stored in the DIT. Note that the server must be restarted after modifying the configuration.
We will then describe the installation layout (ie, how the various files are stored on the disk).</description>
    </item>
    
    <item>
      <title>2.1 - Configuration Description</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/2.1-config-description.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/2.1-config-description.html</guid>
      <description>2.1 - Configuration Description It&amp;rsquo;s a good practice to not modify the configuration LDIF file by hand, instead use the Studio Configuration plugin to modify the server configuration.
Overall structure The configuration is stored in a hierarchical order, where sub-elements are related to their parent. For instance, the Transports are associated to the corresponding Server that uses them. Each server may contain one or more transports.
The following hierarchy describe the different kind of elements that one can configure, and their relationship :</description>
    </item>
    
    <item>
      <title>2.1 - Data modification</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.1-data-modification.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.1-data-modification.html</guid>
      <description>2.1 - Data modification We will first expose the way you inject entries in Apache Directory Server. There are four type of operations you can use for that :
 Addition Deletion Modification Move and/or rename  (The last operation allows a user to move, rename or move and rename entries).
We will show how to add or delete entries in the following chapters, just to show you how it works with Apache Directory Server.</description>
    </item>
    
    <item>
      <title>2.1 - Installing the server</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/2.1-installing.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/2.1-installing.html</guid>
      <description>2.1 - Installing the server TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>2.1.1 - Adding Entries</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.1.1-adding-entries.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.1.1-adding-entries.html</guid>
      <description>2.1.1 - Adding Entries We will see how to add new entries into the server. Assuming that we have already created a partition (see Adding a partition), we will use this added partition as a root for the entry addition. We will also create the ou=people entry.
We try to add a new user to the &amp;ldquo;Seven Seas&amp;rdquo; partition. The data for the entry is inspired by &amp;ldquo;Peter Pan&amp;rdquo; and provided by this LDIF file (Captain hook):</description>
    </item>
    
    <item>
      <title>2.1.2 - Deleting Entries</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.1.2-deleting-entries.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.1.2-deleting-entries.html</guid>
      <description>2.1.2 - Deleting Entries Deleting entries is quite simple : you just need to provide their DN, and require for the deletion of the associated entry. Although there are a few conditions that must be fulfilled for this operatio to be successful :
 The entry must exist; It should not have any children; The user requiring the deletion must have enough priviledge to do so  Assuming those three conditions being fulfilled, you can proceed with the deletion.</description>
    </item>
    
    <item>
      <title>2.2 - LDAP server configuration</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/2.2-ldap-server-config.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/2.2-ldap-server-config.html</guid>
      <description>2.2 - LDAP server configuration TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>2.2 - Searching Data</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.2-searching-data.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.2-searching-data.html</guid>
      <description>2.2 - Searching Data Searching is the most frequent operation done on a LDAP server : everything is optimized so that the search operation is as fast as possible.
We will show how to do some simple searches on Apache Directory Server in the following pages.
Table of content  2.2.1 - Simple search 2.2.2 - More search options  </description>
    </item>
    
    <item>
      <title>2.2.1 - Debian Instance Layout</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/2.2.1-debian-instance-layout.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/2.2.1-debian-instance-layout.html</guid>
      <description>2.2.1 - Debian Instance Layout When you run the installer ( sudo dpkg -i apacheds-&amp;lt;version&amp;gt;-&amp;lt;arch&amp;gt;.deb ) on your debian system, it will install the server on your disk, using this layout :
 / | +-- etc/ | | | +-- init.d/ | | | +-- apacheds-&amp;lt;version&amp;gt;-&amp;lt;instance&amp;gt; The daemon used to start the server +-- opt/ | | | +-- apacheds-&amp;lt;version&amp;gt; | | | +-- conf/ | | | | | +-- wrapper.</description>
    </item>
    
    <item>
      <title>2.2.1 - Simple search</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.2.1-simple-search.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.2.1-simple-search.html</guid>
      <description>2.2.1 - Simple search Basically, a search in LDAP requires a few parameters :
 A server on which we will send the request A port for this server A base DN, the location where to start the search from A filter to select the entries to be returned The user doing the search A password if the user is not already bound A scope, defining the depth we should look for The list of attributes to return  There are several other options, which will be exposed in the next chapter.</description>
    </item>
    
    <item>
      <title>2.2.2 - More search options</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.2.2-more-search-options.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.2.2-more-search-options.html</guid>
      <description>2.2.2 - More search options There are many parameters we haven&amp;rsquo;t explained in the previous chapter.
Bound/anonymous searches When you send a SearchRequest to the server, you may be anonymous, or you may have been bound before the search is done. Binding on a server creates an LDAP session, which stores the credentials. This is used by the authorization system to filter the requests and the returned data, depending on the server settings.</description>
    </item>
    
    <item>
      <title>2.2.2 - RPM Instance Layout</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/2.2.2-rpm-instance-layout.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/2.2.2-rpm-instance-layout.html</guid>
      <description>2.2.2 - RPM Instance Layout When you run the installer on your RPM based system, it will install the server on your disk, using this layout :
 / | +-- etc/ | | | +-- init.d/ | | | +-- apacheds-&amp;lt;version&amp;gt;-&amp;lt;instance&amp;gt; The daemon used to start the server +-- opt/ | | | +-- apacheds-&amp;lt;version&amp;gt; | | | +-- conf/ | | | | | +-- wrapper.conf The wrapper default configuration | | | +-- bin/ | | | | | +-- apacheds* The script that starts the server | | | | | +-- wrapper* The binary that starts the server | | | +-- lib | | | | | +-- wrapper-3.</description>
    </item>
    
    <item>
      <title>2.2.3 - MacOSX Instance Layout</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/2.2.3-macosx-instance-layout.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/2.2.3-macosx-instance-layout.html</guid>
      <description>2.2.3 - MacOSX Instance Layout The Mac OS X installer creates the following layout on yout disk :
 / | +-- usr/ | | | +-- bin/ | | | | | +-- apacheds The script that starts the server | | | +-- local/ | | | +-- apacheds-&amp;amp;lt;version&amp;amp;gt; | | | +-- bin/ | | | | | +-- wrapper* The wrapper | | | | | +-- apacheds* The ApacheDS server starter | | | +-- conf/ | | | | | +-- wrapper.</description>
    </item>
    
    <item>
      <title>2.2.4 - Windows Instance Layout</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/2.2.4-windows-instance-layout.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/2.2.4-windows-instance-layout.html</guid>
      <description>2.2.4 - Windows Instance Layout TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>2.2.5 - Generic Instance Layout</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/2.2.5-generic-instance-layout.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/2.2.5-generic-instance-layout.html</guid>
      <description>2.2.5 - Generic Instance Layout This installer just contain everything needed to start ApacheDS but it will not create a daemon not a Windows Service. Would one like to start ApacheDS, it will have to start the apacheds.sh or apacheds.bat script shell.
The installer is just a raeball that needs to be oepend and deflated at the selected position :
tar xzpf apacheds-&amp;lt;version&amp;gt;.tar.gz  or
gunzip apacheds-&amp;lt;version&amp;gt;.zip  The layout is quite simple :</description>
    </item>
    
    <item>
      <title>2.3 - Instance Layout</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/2.2-instance-layout.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/2.2-instance-layout.html</guid>
      <description>2.2 - Instance Layout Note that the installation will differ with the target OS. We currently support :
 2.2.1 - Debian instance Layout 2.2.2 - RPM instance Layout 2.2.3 - MacOSX instance Layout 2.2.4 - Windows instance Layout 2.2.5 - Generic instance Layout  When we start a server, after having installed it, it creates some other directories where the data will be stored. Here is a list of those data :</description>
    </item>
    
    <item>
      <title>2.3 - Kerberos server configuration</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/2.3-kerberos-server-config.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/2.3-kerberos-server-config.html</guid>
      <description>2.3 - Kerberos server configuration TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>2.3 - The Schema</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.3-introducing-schema.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.3-introducing-schema.html</guid>
      <description>2.3 - The Schema All the data stored into a LDAP server are structured following a schema, a bit like any DBMS. Apache Directory Server does have a dynamic schema : that means you can modify the schema without having to restart the server.
We won&amp;rsquo;t describe in the basic user guide how to manage the schema, this will be extensively described in the Advanced user guide, this chapter is just a short introduction.</description>
    </item>
    
    <item>
      <title>2.3.1 - Adding Schema Elements</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.3.1-adding-schema-elements.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.3.1-adding-schema-elements.html</guid>
      <description>2.3.1 - Adding Schema Elements Motivation The schema of an LDAP server is comprised of object classes, attributes, syntaxes and matching rules. Basically it defines which entries are allowed within the server and how the server should handle them
Is it always necessary to define my own schema elements? No. ApacheDS comes with a comprehensive set of predefined, standardized schema elements (like inetOrgPerson). It is quite common to solely use the predefined schema.</description>
    </item>
    
    <item>
      <title>2.3.2 - Enabling Schema</title>
      <link>https://directory.apache.org/apacheds/basic-ug/2.3.2-enabling-schema.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/2.3.2-enabling-schema.html</guid>
      <description>2.3.2 - Enabling Schema Motivation Is it always necessary to define my own schema elements? No. ApacheDS comes with a comprehensive set of predefined, standardized schema elements (like inetOrgPerson). It is quite common to solely use the predefined schema. The same holds true for other directory servers, by the way.  In the following text the addition of user defined schema elements to the schema is described in tutorial style.</description>
    </item>
    
    <item>
      <title>2.4 - Kerberos and Unlimited Strength Policy</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/2.4-kerberos-ulp.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/2.4-kerberos-ulp.html</guid>
      <description>2.4 - Kerberos and Unlimited Strength Policy TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>2.5 - PKINIT</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/2.5-pkinit.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/2.5-pkinit.html</guid>
      <description>2.5 - PKINIT TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>2.6 - Cross Realm</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/2.6-cross-realm.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/2.6-cross-realm.html</guid>
      <description>2.6 - Cross Realm TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>3 - Administrative Model</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/3-admin-model.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/3-admin-model.html</guid>
      <description>Chapter content  3.1 - Administrative Points 3.2 - Operations on an Administrative Point  3 - Administrative Model The Administrative Model is a really critical notion that needs to be understood, because it drives many of ApacheDS roles.
It&amp;rsquo;s directly inherited by the X.500 Administrative model (in fact, we do implement the full X.500 specification related to AAs).
What is the Administrative Model ? The idea is to define the DIT as some areas which are administered.</description>
    </item>
    
    <item>
      <title>3 - Basic Security</title>
      <link>https://directory.apache.org/apacheds/basic-ug/3-basic-security.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/3-basic-security.html</guid>
      <description>3 - Basic Security This chapter expose the basic security configuration you can setup. It covers simple authentication, authorization and SSL.
Table of content  3.1 - Authentication options 3.2 - Basic authorization 3.3 - How to enable SSL  </description>
    </item>
    
    <item>
      <title>3 - Kerberos administration</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/3-kerberos-admin.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/3-kerberos-admin.html</guid>
      <description>Table of content  3.1 - Starting and Stopping the server 3.2 - Managing Clients and Services 3.3 - Changing passwords 3.4 - Logs 3.5 - Replication 3.6 - Backup/Restore  3 - Kerberos administration TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>3.1 - Authentication options</title>
      <link>https://directory.apache.org/apacheds/basic-ug/3.1-authentication-options.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/3.1-authentication-options.html</guid>
      <description>3.1 - Authentication options This section describes the authentication options of ApacheDS 2.0. Anonymous and simple binds are supported, as well as SASL mechanisms. Configuring and using the first two of them is described below with the help of examples.
 What is authentication? Simple binds  Using command line tools Binds from Java components using JNDI   Passwords stored one-way encrypted  Passwords not stored in clear text But how to obtain the hash value for a password?</description>
    </item>
    
    <item>
      <title>3.1 - Starting and Stopping the server</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/3.1-start-stop.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/3.1-start-stop.html</guid>
      <description>3.1 - Starting and Stopping the server TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>3.1. Administrative points</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/3.1-administrative-points.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/3.1-administrative-points.html</guid>
      <description>3.1. Administrative points An Administrative Point is an entry which is defining a starting point from which some of the four existing administrative roles will span. It&amp;rsquo;s important to understand than an Administrative Point (or AP) comes hand in hand with the associated Subentries, otherwise it&amp;rsquo;s useless.
Any entry can be defined as an AP.
In the following schema, we have depicted a DIT with three APs, the big one being an AAP, the blue one is a SAP and the green one is an IAP.</description>
    </item>
    
    <item>
      <title>3.2 - Basic authorization</title>
      <link>https://directory.apache.org/apacheds/basic-ug/3.2-basic-authorization.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/3.2-basic-authorization.html</guid>
      <description>3.2 - Basic authorization This section describes the default authorization functionality of ApacheDS 1.5, which is very simple. On the other hand, it is inadequate for most serious deployments. Therefore a basic example to the &amp;ldquo;real&amp;rdquo; authorization subsystem is provided as well.
 What is authorization?  Authorization for directory operations vs. group membership   Default authorization behavior for directory operations  Sample data within &amp;ldquo;ou=users,ou=system&amp;rdquo; Rules and sample operations Is this sufficient?</description>
    </item>
    
    <item>
      <title>3.2 - Managing Clients and Services</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/3.2-managing-clients-services.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/3.2-managing-clients-services.html</guid>
      <description>3.2 - Managing Clients and Services TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>3.2 Operations on an Administrative Point</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/3.2-operations-on-an-administrativepoint.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/3.2-operations-on-an-administrativepoint.html</guid>
      <description>3.2 Operations on an Administrative Point There are six kind of operations we can have on an AdministrativePoint :
 creating a new AP removing an existing AP modifying an existing AP by adding or removing a role renaming an AP moving an AP renaming or moving an AP  Renaming an AP has no impact on the administrative model, as we don&amp;rsquo;t point (internally) on the entry&amp;rsquo;s DN, but on its UUID, so the last three operations can be gathered into one single Move operation.</description>
    </item>
    
    <item>
      <title>3.3 - Changing passwords</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/3.3-change-password.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/3.3-change-password.html</guid>
      <description>3.3 - Changing passwords TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>3.3 - How to enable SSL</title>
      <link>https://directory.apache.org/apacheds/basic-ug/3.3-enabling-ssl.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/3.3-enabling-ssl.html</guid>
      <description>3.3 - How to enable SSL This section describes the transport layer security options for LDAP, and especially how to enable LDAPS on ApacheDS.
 Transport layer security and LDAP Server configuration  In case you want ADS to generate the certificate In case you want to use an external keystore   Verification, Clients  Using Apache Directory Studio to connect Other clients, Java programs using JNDI   Resources   Transport layer security and LDAP Several requirements related to security can be easily accomplished with the help of SSL technology (Secure Socket Layer) or its standardized successor TLS (Transport Layer Security, RFC 2246).</description>
    </item>
    
    <item>
      <title>3.4 - Logs</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/3.4-logs.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/3.4-logs.html</guid>
      <description>3.4 - Logs TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>3.5 - Replication</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/3.5-replication.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/3.5-replication.html</guid>
      <description>3.5 - Replication TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>3.6 - Backup/Restore</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/3.6-backup-restore.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/3.6-backup-restore.html</guid>
      <description>3.6 - Backup/Restore TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4 - Authentication &amp; Authorization</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4-authentication-and-authorization.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4-authentication-and-authorization.html</guid>
      <description>4 - Authentication and Authorization Chapter content  4.1 - Authentication  4.1.1 - Simple authentication  4.1.1.1 - Anonymous Authentication 4.1.1.2 - Name/Password Authentication 4.1.1.3 - Unauthenticated Authentication   4.1.2 - SASL authentication  4.1.2.1 - SASL PLAIN text Authentication 4.1.2.2 - SASL CRAM-MD5 Authentication 4.1.2.3 - SASL DIGEST-MD5 Authentication 4.1.2.4 - SASL GSSAPI Authentication 4.1.2.5 - SASL EXTERNAL Authentication 4.1.2.6 - SASL NTLM Authentication   4.1.3 - Kerberos authentication 4.</description>
    </item>
    
    <item>
      <title>4 - Integrating ApacheDS with other programs</title>
      <link>https://directory.apache.org/apacheds/basic-ug/4-integrating-apacheds.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/4-integrating-apacheds.html</guid>
      <description>4 - Integrating ApacheDS with other programs In this chapter, we expose various environments that are depending on Apache Directory Server, and how to set those environments. As Apache Directory Server is an LDAP server, it can be used to manage messaging users, web servers like Tomcat, users in a Unix environment, etc.
Table of content  4.1 - Mozilla Thunderbird Integration  </description>
    </item>
    
    <item>
      <title>4 - Using Kerberos</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/4-using-kerberos.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/4-using-kerberos.html</guid>
      <description>Table of content  4.1 - Authenticate with kinit on Linux 4.2 - Authenticate with Studio  4 - Using Kerberos We will now describe how to use kerberos, namely how to obtain tickets.
We will use either the kinit program installed on Linux or Studio for that.</description>
    </item>
    
    <item>
      <title>4.1 - Authenticate with kinit on Linux</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/4.1-authenticate-kinit.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/4.1-authenticate-kinit.html</guid>
      <description>4.1 - Authenticate with kinit on Linux ##Setup
You first have to make sure kinit is installed.
You can check that by typing kinit in a console :
$ kinit --version kinit (Heimdal 1.4.1apple1) Copyright 1995-2010 Kungliga Tekniska Högskolan Send bug-reports to heimdal-bugs@h5l.org $  Then, you have to configure the krb5.conf file (it can be found in /etc/krb5.conf, if not just add it).
A minimal /etc/krb5.conf file looks as follows (make sure the port and host name matches!</description>
    </item>
    
    <item>
      <title>4.1 - Mozilla Thunderbird Integration</title>
      <link>https://directory.apache.org/apacheds/basic-ug/4.1-mozilla-thunderbird.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-ug/4.1-mozilla-thunderbird.html</guid>
      <description>4.1 - Mozilla Thunderbird Integration In this section you will learn how to integrate Apache Directory Server into a mail client in order to use the data as an address book. Mozilla Thunderbird is used as an example.
 E-Mail clients and Mozilla Thunderbird  Mozilla Thunderbird   Prerequisites Define Apache Directory Server as an address book  Open the address book Define a new LDAP directory Provide connection data   Searching your new address book Resources   E-Mail clients and Mozilla Thunderbird Integrating an LDAP server in an E-Mail client is a very traditionally task, because directories are commonly used as user repositories within companies and organizations.</description>
    </item>
    
    <item>
      <title>4.1. Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1-authentication.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1-authentication.html</guid>
      <description>4.1. Authentication Chapter content  4.1.1 - Simple authentication  4.1.1.1 - Anonymous Authentication 4.1.1.2 - Name/Password Authentication 4.1.1.3 - Unauthenticated Authentication   4.1.2 - SASL authentication  4.1.2.1 - SASL PLAIN text Authentication 4.1.2.2 - SASL CRAM-MD5 Authentication 4.1.2.3 - SASL DIGEST-MD5 Authentication 4.1.2.4 - SASL GSSAPI Authentication 4.1.2.5 - SASL EXTERNAL Authentication 4.1.2.6 - SASL NTLM Authentication   4.1.3 - Kerberos authentication 4.1.4 - Client authentication through certificates  LDAP is a connected protocol.</description>
    </item>
    
    <item>
      <title>4.1.1 Simple Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.1-simple-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.1-simple-authn.html</guid>
      <description>4.1.1 - Simple Authentication This authentication mode uses a Simple Bind Request. It&amp;rsquo;s just about sending a name and a password to the server, which will either create a session for the given credentials, or reject the request.
As we said, we have to pass a name and a password. This leads to three different combinations of Simple Bind :
 4.1.1.1 - Anonymous Authentication 4.1.1.2 - Name/Password Authentication 4.1.1.3 - Unauthenticated Authentication  The second mechanism is a normal authentication.</description>
    </item>
    
    <item>
      <title>4.1.1.1 Anonymous Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.1.1-anonymous-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.1.1-anonymous-authn.html</guid>
      <description>4.1.1.1 - Anonymous Authentication When we don&amp;rsquo;t provide a name or password while proceeding to a Bind, we enter into an Anonymous mode. This is a mode that the server must allow, otherwise the user won&amp;rsquo;t be authenticated.
It worth noticing that one can do a search on a server without first authenticating : the search will be done with an anonymous status (in other words, an Anonymous session will be created in this case).</description>
    </item>
    
    <item>
      <title>4.1.1.2 Name/Password Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.1.2-name-password-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.1.2-name-password-authn.html</guid>
      <description>4.1.1.2 - Name/Password Authentication This is the most common authentication system, though not the safest. The user provides his name and a password. Both are passed as clear text to the server, which checks that the user exists, and that its password is correct.
User&amp;rsquo;s name retrieval The first thing the server does is to check that the user&amp;rsquo;s name exists in the server. The provided name is always a full DN.</description>
    </item>
    
    <item>
      <title>4.1.1.3 Unauthenticated Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.1.3-unauthenticated-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.1.3-unauthenticated-authn.html</guid>
      <description>4.1.1.3 - Unauthenticated Authentication The Unauthenticated Authentication mechanism is a bit specific. First of all, none all the LDAP servers support such a mechanism. In fact, the default behavior is for server to return a unwillingToPerform result code when someone tries to bind using a null password.
We won&amp;rsquo;t go any deeper into this &amp;lsquo;feature&amp;rsquo;, those interested in the rational behind it and the associated drawbacks can read the following links :</description>
    </item>
    
    <item>
      <title>4.1.2 SASL Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.2-sasl-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.2-sasl-authn.html</guid>
      <description>4.1.2 - SASL Authentication Chapter content  4.1.2.1 - SASL PLAIN text Authentication 4.1.2.2 - SASL CRAM-MD5 Authentication 4.1.2.3 - SASL DIGEST-MD5 Authentication 4.1.2.4 - SASL GSSAPI Authentication 4.1.2.5 - SASL EXTERNAL Authentication 4.1.2.6 - SASL NTLM Authentication  Introduction SASL authentication is based on a standard described in RFC 4422. SASL means Simple Authentication and Security Layer.
It extends the Simple authentication, by allowing the LDAP server to authenticate the user by various mechanisms.</description>
    </item>
    
    <item>
      <title>4.1.2.1 SASL PLAIN Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.2.1-sasl-plain-text-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.2.1-sasl-plain-text-authn.html</guid>
      <description>4.1.2.1 SASL PLAIN Authentication The SASL PLAIN authentication is most certainly useless, as one can already authenticate using the Simple Bind. However, it&amp;rsquo;s still possible to issue a SASL PLAIN authentication on ApacheDS.
The difference with a Simple Bind is that the user&amp;rsquo;s name is not DN, but a meaningful value that is stored into one of the user&amp;rsquo;s entry Attributes.
When the server receives a SASL PLAIN bind request, it will look for the first entry which uid is equal to the provided value, starting from the server searchBaseDN position in the DIT.</description>
    </item>
    
    <item>
      <title>4.1.2.2 - SASL CRAM-MD5 Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.2.2-sasl-cram-md5-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.2.2-sasl-cram-md5-authn.html</guid>
      <description>4.1.2.2 - SASL CRAM-MD5 Authentication The CRAM-MD5 SASL mechanism is defined by RFC 2195.
We will have an exchange between the client, which will send an empty Bind request (i.e., the username and credentials won&amp;rsquo;t be sent the first time), and the server will return a challenge.
It&#39;s not recommended to use this mechanism.  Usage The client first send a BindRequest with no credentials:
MessageType : BIND_REQUEST Message ID : 1 BindRequest Version : &#39;3&#39; Name : &#39;null&#39; Sasl credentials Mechanism :&#39;CRAM-MD5&#39; Credentials : null  The server will return a BindResponse with a SASL_BIND_IN_PROGRESS status :</description>
    </item>
    
    <item>
      <title>4.1.2.3 - SASL DIGEST-MD5 Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.2.3-sasl-digest-md5-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.2.3-sasl-digest-md5-authn.html</guid>
      <description>4.1.2.3 - SASL DIGEST-MD5 Authentication The DIGEST-MD5 SASL mechanism is defined by RFC 2829, which has been moved to an historic status by RFC 6331, due to its intrinsic weaknesses.
It&#39;s not recommended to use this mechanism.  Usage As for CRAM-MD5 mechanism, there is an exchange between the server and the client. First, the client sends a BindRequest with no credentials :
MessageType : BIND_REQUEST Message ID : 1 BindRequest Version : &#39;3&#39; Name : &#39;null&#39; Sasl credentials Mechanism :&#39;DIGEST-MD5&#39; Credentials : null  The server responds with a BindResponses containing a challenge :</description>
    </item>
    
    <item>
      <title>4.1.2.4 - SASL GSSAPI Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.2.4-sasl-gssapi-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.2.4-sasl-gssapi-authn.html</guid>
      <description>4.1.2.4 - SASL GSSAPI Authentication This authentication mechanism is specified in the following RFCs :
* [RFC 4752](https://tools.ietf.org/html/rfc4752)  It&amp;rsquo;s more specifically used for Kerberos V5 authentication. As Apache Directory Server is also a Kerberos Server, it comes as a natural extension of the server.
It requires some configuration though.
Configuration The idea is for the LDAP server to delegate the authentication to the Kerberos Server.
Usage MessageType : BIND_REQUEST Message ID : 1 BindRequest Version : &amp;lsquo;3&amp;rsquo; Name : &#39;&amp;rsquo; Sasl credentials Mechanism :&amp;lsquo;GSSAPI&amp;rsquo; Credentials : (omitted-for-safety)</description>
    </item>
    
    <item>
      <title>4.1.2.5 - SASL EXTERNAL Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.2.5-sasl-external-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.2.5-sasl-external-authn.html</guid>
      <description>4.1.2.5 - SASL EXTERNAL Authentication </description>
    </item>
    
    <item>
      <title>4.1.2.6 - SASL NTLM Authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.2.6-sasl-ntlm-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.2.6-sasl-ntlm-authn.html</guid>
      <description>4.1.2.6 - SASL NTLM Authentication </description>
    </item>
    
    <item>
      <title>4.1.3 - Kerberos authentication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.3-kerberos-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.3-kerberos-authn.html</guid>
      <description>4.1.3 - Kerberos authentication </description>
    </item>
    
    <item>
      <title>4.1.4 - Client authentication through certificates</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.1.4-certificate-authn.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.1.4-certificate-authn.html</guid>
      <description>4.1.4 - Client authentication through certificates To be compoleted&amp;hellip;
At the moment, the server does not support this feature.</description>
    </item>
    
    <item>
      <title>4.2 - Authenticate with Studio</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/4.2-authenticate-studio.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/4.2-authenticate-studio.html</guid>
      <description>4.1 - Authenticate with Studio We will explain how to use the kerberos server to authentify users on a LDAP server. Let&amp;rsquo;s first define the way we will store data in the LDAP server
We will suppose that the Kerberos server is installed on a server which hostName is example.net and the realm is EXAMPLE.COM in the following paragraphes.  Servers configuration We first have to configure the LDAP and Kerberos server, in order to be able to use the kerberos server to authenticate on the ldap server.</description>
    </item>
    
    <item>
      <title>4.2 - Authorization</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2-authorization.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2-authorization.html</guid>
      <description>4.2 - Authorization ApacheDS uses an adaptation of the X.500 basic access control scheme in combination with X.500 subentries to control access to entries and attributes within the DIT. This document will show you how to enable the basic access control mechanism and how to define access control information to manage access to protected resources.
Chapter content  4.2.1 - Introduction 4.2.2 - Definitions 4.2.3 - Enabling access control 4.2.4 - Aci Types 4.</description>
    </item>
    
    <item>
      <title>4.2.1 - Introduction</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.1-introduction.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.1-introduction.html</guid>
      <description>4.2.1 - Introduction First of all, one has to understand that Authorization in this context involves four components. The principle is :
grants Users authorization to proceed some Action on a set of Items in a defined Area  Let&amp;rsquo;s define the four components.
Users :
 the set of entity being able to do some action. It can be every user, the entry owner, a list of users, members of a group or a selection in the DIT.</description>
    </item>
    
    <item>
      <title>4.2.10 - ACI grammar</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.10-aci-grammar.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.10-aci-grammar.html</guid>
      <description>4.2.10 - ACI grammar The ACI attributes store data following a specific structure, which is define by this grammar :
&amp;lt;wrapperEntryPoint&amp;gt; ::= &amp;lt;SP*&amp;gt; &#39;{&#39; &amp;lt;SP*&amp;gt; &amp;lt;mainACIItemComponent&amp;gt; &amp;lt;SP*&amp;gt; &amp;lt;mainACIItemComponents&amp;gt; &#39;}&#39; &amp;lt;SP*&amp;gt; EOF &amp;lt;mainACIItemComponents&amp;gt; ::= &#39;,&#39; &amp;lt;SP*&amp;gt; &amp;lt;mainACIItemComponent&amp;gt; &amp;lt;SP*&amp;gt; &amp;lt;mainACIItemComponents&amp;gt; | e ** Note : we have to allow only one of each option &amp;lt;mainACIItemComponent&amp;gt; ::= &amp;quot;identificationTag&amp;quot; &amp;lt;SP+&amp;gt; SAFEUTF8STRING | &amp;quot;precedence&amp;quot; &amp;lt;SP+&amp;gt; INTEGER | &amp;quot;authenticationLevel&amp;quot; &amp;lt;SP+&amp;gt; &amp;lt;authenticationLevel&amp;gt; | &amp;quot;itemOrUserFirst&amp;quot; &amp;lt;SP+&amp;gt; &amp;lt;itemOrUserFirst&amp;gt; &amp;lt;authenticationLevel&amp;gt; ::= &amp;quot;none&amp;quot; | &amp;quot;simple&amp;quot; | &amp;quot;strong&amp;quot; &amp;lt;itemOrUserFirst&amp;gt; ::= &amp;quot;itemFirst&amp;quot; &amp;lt;SP*&amp;gt; &#39;:&#39; &amp;lt;SP*&amp;gt; &#39;{&#39; &amp;lt;SP*&amp;gt; &amp;lt;itemType&amp;gt; &amp;lt;SP*&amp;gt; &#39;}&#39; | &amp;quot;userFirst&amp;quot; &amp;lt;SP*&amp;gt; &#39;:&#39; &amp;lt;SP*&amp;gt; &#39;{&#39; &amp;lt;SP*&amp;gt; &amp;lt;userType&amp;gt; &amp;lt;SP*&amp;gt; &#39;}&#39; &amp;lt;itemType&amp;gt; ::= &amp;quot;protectedItems&amp;quot; &amp;lt;SP*&amp;gt; &#39;{&#39; &amp;lt;SP*&amp;gt; &amp;lt;protectedItem?</description>
    </item>
    
    <item>
      <title>4.2.11 - Links and References</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.11-links-and-references.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.11-links-and-references.html</guid>
      <description>4.2.11 Links and references The Apache Directory Server authorization system is based on the X.500 specifications. Those documents are available on X.500 freely available specifications , and more specifically X.501 .
Some more &amp;lsquo;user friendly&amp;rsquo; documentation about Access Control can be found in Chadwick&amp;lsquo;s book, available at X.500 book , chapter 8.</description>
    </item>
    
    <item>
      <title>4.2.2 - Definitions</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.2-definitions.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.2-definitions.html</guid>
      <description>4.2.2 - Definitions ACI :
 Access Control Information. The set of all the information which might be relevant to an access control decision for a given subject.
 ACDF :
 Access Control Decision Function. It is the function used to decide whether a particular subject has a particular access right by virtue of applicable ACI items.
 protected item :
 A protected item is the element of directory information being accessed.</description>
    </item>
    
    <item>
      <title>4.2.3 - Enabling Access Control</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.3-enabling-access-control.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.3-enabling-access-control.html</guid>
      <description>4.2.3 - Enabling Access Control The Access Control Subsystem (ACI) is described in the Basic User Guide. The ACI is disabled by default and the simplest way to enable it is to use Apache Directory Studio.
After the server has started, the relevant entry can be found in config.ldif_migrated :
# default, config dn: ads-directoryServiceId=default,ou=config ads-directoryserviceid: default ads-dssyncperiodmillis: 15000 ads-dsallowanonymousaccess: TRUE ads-dsreplicaid: 1 ads-dsaccesscontrolenabled: FALSE ads-dspasswordhidden: FALSE ads-dsdenormalizeopattrsenabled: FALSE ads-enabled: TRUE objectclass: top objectclass: ads-base objectclass: ads-directoryService  The following ldapmodify (by the admin user) will activate the ACI Subsystem when the server is next restarted :</description>
    </item>
    
    <item>
      <title>4.2.4 - ACI types</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.4-aci-types.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.4-aci-types.html</guid>
      <description>4.2.4 - ACI types Three different types of ACI exist. All types use the same specification syntax for an ACIITem. These types differ in their placement and manner of use within the directory.
Chapter content  4.2.4.1 - Entry Aci 4.2.4.2 - Prescriptive Aci 4.2.4.3 - Subentry Aci  </description>
    </item>
    
    <item>
      <title>4.2.4.1 - EntryACI</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.4.1-entryaci.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.4.1-entryaci.html</guid>
      <description>4.2.4.1 - EntryACI Entry ACI are access controls added to entries to protect that entry specifically. Meaning the protected entry is the entry where the ACI resides. When performing an operation on an entry, ApacheDS checks for the presence of the multivalued operational attribute, entryACI. The values of the entryACI attribute contain ACIItems.
There is one exception to the rule of consulting entryACI attributes within ApacheDS: add operations do not consult the entryACI within the entry being added.</description>
    </item>
    
    <item>
      <title>4.2.4.2 - PrescriptiveACI</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.4.2-prescriptiveaci.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.4.2-prescriptiveaci.html</guid>
      <description>4.2.4.2 - PrescriptiveACI Prescriptive ACI are access controls that are applied to a collection of entries, not just to a single entry. Collections of entries are defined by the subtreeSpecifications of subentries. Hence prescriptive ACI are added to subentries as attributes and are applied by ApacheDS to the entries selected by the subentry&amp;rsquo;s subtreeSpecification. ApacheDS uses the prescriptiveACI multivalued operational attribute within subentries to contain ACIItems that apply to the entry collection.</description>
    </item>
    
    <item>
      <title>4.2.4.3 - SubentryACI</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.4.3-subentryaci.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.4.3-subentryaci.html</guid>
      <description>4.2.4.3 - SubentryACI Access to subentries also needs to be controlled. Subentries are special in ApacheDS. Although they subordinate to an administrative entry (entry of an Administrative Point), they are technically considered to be in the same context as their administrative entry. ApacheDS considers the perscriptive ACI applied to the administrative entry, to also apply to its subentries.
This however is not the most intuitive mechanism to use for explicitly controlling access to subentries.</description>
    </item>
    
    <item>
      <title>4.2.5 - ACI elements</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.5-aci-elements.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.5-aci-elements.html</guid>
      <description>4.2.5 - ACI elements Chapter content  4.2.5.1 - User Classes 4.2.5.2 - User Protected Items 4.2.5.3 - Permissions 4.2.5.4 - Subtrees  </description>
    </item>
    
    <item>
      <title>4.2.5.1 - UserClasses</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.5.1-userclasses.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.5.1-userclasses.html</guid>
      <description>4.2.5.1 - UserClasses TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.2.5.2 - ProtectedItems</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.5.2-protecteditems.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.5.2-protecteditems.html</guid>
      <description>4.2.5.2 - ProtectedItems The protected items are elements being accessed, and thus controlled by ACIs. Many parts of the DIT can be protected :
 Entry : a entry as a whole. allUserAttributeTypes : the User&amp;rsquo;s AttributeType, excluding the associated values allUserAttributeTypesAndValues : the User&amp;rsquo;s AttributeType, including the associated values allAttributeValues : All the AttributeType values attributeType : A specific AttributeType attributeValue : A set of attribute values selfValue : The values associated with the requestor RDN&amp;rsquo;s AttributeTypes  </description>
    </item>
    
    <item>
      <title>4.2.5.3 - Permissions</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.5.3-permissions.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.5.3-permissions.html</guid>
      <description>4.2.5.3 - Permissions TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.2.5.4 - Subtrees</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.5.4-subtrees.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.5.4-subtrees.html</guid>
      <description>4.2.5.4 - Subtrees TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.2.6 - The ACDF engine</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.6-the-acdf-engine.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.6-the-acdf-engine.html</guid>
      <description>4.2.6 - The ACDF engine Chapter content  4.2.6.1 - How it works 4.2.6.2 - Selections 4.2.6.3 - Constraints 4.2.6.4 - Priority  </description>
    </item>
    
    <item>
      <title>4.2.6.1 - How it works</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.6.1-how-it-works.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.6.1-how-it-works.html</guid>
      <description>4.2.6.1 - How it works TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.2.6.2 - Selections</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.6.2-selections.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.6.2-selections.html</guid>
      <description>4.2.6.2 - Selections TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.2.6.3 - Constraints</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.6.3-constraints.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.6.3-constraints.html</guid>
      <description>4.2.6.3 - Constraints TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.2.6.4 - Priority</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.6.4-priority.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.6.4-priority.html</guid>
      <description>4.2.6.4 - Priority TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.2.7 - Using ACIs trail</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.7-using-acis-trail.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.7-using-acis-trail.html</guid>
      <description>4.2.7 - Using ACIs trail Chapter content  4.2.7.1 - Enable Authenticated Users to Browse and Read Entries 4.2.7.2 - Allow Self Password Modify  </description>
    </item>
    
    <item>
      <title>4.2.7.1 - Enable Authenticated Users to Browse and Read Entries</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.7.1-enable-authenticated-users-to-browse-and-read-entries.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.7.1-enable-authenticated-users-to-browse-and-read-entries.html</guid>
      <description>4.2.7.1 - Enable Authenticated Users to Browse and Read Entries In this trail, we will show how we will allow all authenticated users to browse and read all the entries.
By default, if the access control subsystem is enabled, no one but the administrator can browse the DIT. This is obviously not convenient &amp;hellip;
Partition and Access Control Area Setup For this example we presume you have setup a partition at the namingContext dc=example,dc=com and have turned on access controls.</description>
    </item>
    
    <item>
      <title>4.2.7.2 - Allow Self Password Modify</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.7.2-allow-self-password-modify.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.7.2-allow-self-password-modify.html</guid>
      <description>4.2.7.2 - Allow Self Password Modify We will now configure the system to allow anyone to modify his/her own password :
{ identificationTag &amp;quot;allowSelfAccessAndModification&amp;quot;, precedence 14, authenticationLevel none, itemOrUserFirst userFirst: { userClasses { thisEntry }, userPermissions { { protectedItems {entry}, grantsAndDenials { grantModify, grantBrowse, grantRead } }, { protectedItems {allAttributeValues {userPassword}}, grantsAndDenials { grantAdd, grantRemove } } } } }  Commentary Note that two different user permissions are used to accurately specify self access and self modification of the userPassword attribute within the entry.</description>
    </item>
    
    <item>
      <title>4.2.8 - ACIs administration</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.8-acis-administration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.8-acis-administration.html</guid>
      <description>4.2.8 - ACIs administration TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.2.9 - Migration from other LDAP servers</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.2.9-migration-from-other-ldap-servers.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.2.9-migration-from-other-ldap-servers.html</guid>
      <description>4.5.9 - Migration from other LDAP servers TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>4.3. Password Policy</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/4.3-password-policy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/4.3-password-policy.html</guid>
      <description>4.3. Password Policy The Password Policy for LDAP Directories is a RFC draft that has been designed for the very first version in 1999, and the latest version is from 2009. Although it&amp;rsquo;s still a draft, and it&amp;rsquo;s currently noted as inactive, it has been implemented by many existing LDAP servers.
ApacheDS implements most of the draft.
Enforcing a strict password policy is extremely punitive to users. It may leads users to workaround the policy by storing their password in a post-it, a workaround that will defeat any password policy.</description>
    </item>
    
    <item>
      <title>5 - Administration</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/5-administration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/5-administration.html</guid>
      <description>5 - Administration This chapter describe how to administer the Apache Directory Server.
Chapter content  5.1 - Layout 5.2 - Starting and stopping the server 5.3 - Logs 5.4 - Replication 5.5 - Cache  </description>
    </item>
    
    <item>
      <title>5 Interoperability</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/5-interoperability.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/5-interoperability.html</guid>
      <description>5 Interoperability TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>5.1 - Layout</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/5.1-layout.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/5.1-layout.html</guid>
      <description>5.1 - Layout  5.1.1 General Layout  5.1.1.1 Installation Layout 5.1.1.2 Instance Layout   5.1.2 Specific Layouts  5.1.2.1 Archive Distribution (zip/tar.gz) 5.1.2.2 Windows Installer (.exe) 5.1.2.3 Linux Binary (.bin), Debian (.deb) &amp; Fedora (.rpm) Installers 5.1.2.4 Mac OS X Installer (.pkg)     5.1.1 General Layout The general layout for ApacheDS is fairly simple and consists in two major concepts:
 an installation layout an instance layout  5.</description>
    </item>
    
    <item>
      <title>5.2 - Starting and Stopping the server</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/5.2-start-stop.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/5.2-start-stop.html</guid>
      <description>5.2 - Starting and Stopping the server  5.2.1 Archive Distribution (zip/tar.gz)  Starting ApacheDS Stopping ApacheDS   5.2.2 Windows Installer (.exe)  Starting ApacheDS Stopping ApacheDS   5.2.3 Linux Binary (.bin), Debian (.deb) &amp; Fedora (.rpm) Installers  Starting ApacheDS Stopping ApacheDS   5.2.4 Mac OS X Installer (.pkg)  Starting ApacheDS Stopping ApacheDS     5.2.1 Archive Distribution (zip/tar.gz) Starting ApacheDS On Linux/Unix Systems In a terminal, first move to the ApacheDS directory of the unarchived distribution and then run the apacheds.</description>
    </item>
    
    <item>
      <title>5.3 - Logs</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/5.3-logs.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/5.3-logs.html</guid>
      <description>5.3 - Logs 5.3.1 Logs overview ApacheDS internally uses SLF4J as a facade for logs and Log4J is bundled in the standalone ApacheDS distributions.
Logs can be configured by modifying the log4j.properties file which can be found in the conf directory of the server instance (see the previous chapter &amp;ldquo;5.1 - Layout&amp;quot;).
Here is the Log4J configuration that comes with ApacheDS:
############################################################################# # Licensed to the Apache Software Foundation (ASF) under one or more # contributor license agreements.</description>
    </item>
    
    <item>
      <title>5.4 - Replication</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/5.4-replication.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/5.4-replication.html</guid>
      <description>5.4 - Replication 5.4.1 Replication overview ApacheDS supports both Producer-Consumer and Multi-Producers replication based on the syncrepl specification.
Initial steps The below initial conditions must be met before configuring the replication in any mode.
  Make sure all the servers are up and running
  Add the configuration of the partition whose data needs to be replicated. For example if we like to replicate the partition dc=apache,dc=org then make sure to configure this partition in all the servers that are configured to replicate.</description>
    </item>
    
    <item>
      <title>5.5 - Cache</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/5.5-cache.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/5.5-cache.html</guid>
      <description>5.5 - Cache We use many caches in ApacheDS. Here is a list of all the existing caches :
 aliasCache&amp;lt;String, DN&amp;gt; : It caches aliases, using the entryUUID as a key (AbstractBTreePartition) piarCache&amp;lt;String, ParentIdAndRdn&amp;gt; : It caches RDN and their parent, using the entryUUID as a key (AbstractBTreePartition) EntryDN cache : Cache Entry&amp;rsquo;s DN using the entryUUID as a key (AbstractBTreePartition) entryCache (JDBMPartition, MavibotPartition) : Caches the full entries, using their entryUUID as keys.</description>
    </item>
    
    <item>
      <title>6 - Implementing a simple custom Interceptor for ApacheDS</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/6-implementing-interceptor.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/6-implementing-interceptor.html</guid>
      <description>6 - Implementing a simple custom Interceptor for ApacheDS This site was updated for ApacheDS 2.0.
The following is for developers who plan to implement their own interceptors in order to extend or modify the functionality of Apache Directory Server. It contains a simple example as a starting point.
What exactly is an interceptor? An interceptor filters method calls performed on on the DefaultPartitionNexus just like Servlet filters do. The ApacheDS configuration contains a chain of filters performing several tasks.</description>
    </item>
    
    <item>
      <title>6 - Kerberos Glossary</title>
      <link>https://directory.apache.org/apacheds/kerberos-ug/6-glossary.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-ug/6-glossary.html</guid>
      <description>Table of content 6 - Kerberos Glossary TODO&amp;hellip;</description>
    </item>
    
    <item>
      <title>7 - Embedding ApacheDS in Java</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/7-embedding-apacheds.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/7-embedding-apacheds.html</guid>
      <description>7 - Embedding ApacheDS in Java Using ApacheDS for unit tests The idea is to use ADS as an embedded server for Ldap junit tests. We will build an environment in which it will be convenient to test Ldap applications.
We also want to avoid launching the server for every test, as it&amp;rsquo;s an expensive operation. We have built ApacheDS so that you can start a server, inject some data, launch a test, then revert the data and go on to another test.</description>
    </item>
    
    <item>
      <title>8 - Operational Attributes</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/8-operational-attributes.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/8-operational-attributes.html</guid>
      <description>8 - Operational Attributes Operational attributes are attributes that are used internally by the server. They generally can&amp;rsquo;t be modified by a user, although one can read them.
In order to retrieve an operational attribute, you have to require it explicitely, or request all of them using the special attribute &amp;lsquo;+&amp;rsquo;.
RFC 4512 defines four different flavors of AttributeType :
 userApplications : User&amp;rsquo;s attributes directoryOperation : Server&amp;rsquo;s attributes dSAOperation : Server&amp;rsquo;s attributes that have no meant in being distributed distributedOperation : Server&amp;rsquo;s attribute that are used in a distributed environment  ApacheDS support a list of standard LDAP operational attributes, plus a few that are specific.</description>
    </item>
    
    <item>
      <title>9 - ApacheDS internals</title>
      <link>https://directory.apache.org/apacheds/advanced-ug/9-apacheds-internals.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-ug/9-apacheds-internals.html</guid>
      <description>9 - ApacheDS internals Startup The server is started by calling the UberJarMain class, with the directory containing the server&amp;rsquo;s layout. The layout is the list of directory where we will store various server&amp;rsquo;s files :
 The instance directory, ie the base directory for the server : $BASE The configuration directory : ${BASE}/conf/ The log directory : ${BASE}/log/ The partition directory, which will contain the data : ${BASE}/partitions/ The run directory, which will contain the server PID : ${BASE}/run/ The cache directory, containing the cache files : ${BASE}/cache/  All those directories will be created if they do not exist already.</description>
    </item>
    
    <item>
      <title>ADS 2.0 configuration</title>
      <link>https://directory.apache.org/apacheds/configuration/ads-2.0-configuration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/configuration/ads-2.0-configuration.html</guid>
      <description>Introduction ADS 2.0 configuration has been completely reworked since 1.0 and 1.5 versions. While those two versions were XML based, we decided to store the new configuration in the DiT (Directory Information Tree).
It&amp;rsquo;s now available either through an LDAP browser, programatically using an LDAP API or simply by editing the LDIF files stored on the disk.

Configuration structure ADS is more than a LDAP server. It&amp;rsquo;s also a Kerberos server, a DNS Server and a DHCP server.</description>
    </item>
    
    <item>
      <title>ADS config</title>
      <link>https://directory.apache.org/apacheds/configuration/adsconfig.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/configuration/adsconfig.html</guid>
      <description># Apache Directory config schema## Object Classes### class ads-authenticationInterceptor	{#ads-authenticationInterceptor}description | type | oid | superior&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; | &amp;mdash;- | &amp;mdash; | &amp;mdash;&amp;mdash;&amp;ndash;The AuthenticationInterceptor ObjectClass | STRUCTURAL | 1.3.6.1.4.1.18060.0.4.1.3.131 | ads-interceptor#### attributes| optional || &amp;mdash;&amp;mdash;&amp;ndash; || ads-authenticators || ads-passwordPolicies |### class ads-authenticator	{#ads-authenticator}description | type | oid | superior&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; | &amp;mdash;- | &amp;mdash; | &amp;mdash;&amp;mdash;&amp;ndash;A generic authenticator | ABSTRACT | 1.</description>
    </item>
    
    <item>
      <title>Advanced User Guide</title>
      <link>https://directory.apache.org/apacheds/advanced-user-guide.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/advanced-user-guide.html</guid>
      <description>ApacheDS 2.0 Advanced User Guide This guide get you a deep further into ApacheDS 2.0. Once you have installed the server, and undestood how it works, this is the guide to read to get a complete understanding on what it offers, and how to use it at full steam.
Table of content  0 - Community  0.1. Reporting Bugs 0.2. Building trunks 0.3. Contributing   1. Architecture  1.</description>
    </item>
    
    <item>
      <title>Apache DS - Internal Design Guide</title>
      <link>https://directory.apache.org/apacheds/internal-design-guide/internal-design-guide.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/internal-design-guide/internal-design-guide.html</guid>
      <description>Internal Design Guide </description>
    </item>
    
    <item>
      <title>Apache DS - Password Management</title>
      <link>https://directory.apache.org/apacheds/internal-design-guide/password-management.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/internal-design-guide/password-management.html</guid>
      <description>Password Management There are four places where passwords are manipulated in ApacheDS:
 authn interceptor hash interceptor PasswordPolicy PasswordModify extended operation  It&amp;rsquo;s all about having those four piece of code to work well together, considering the requirements are different, somehow.
Default password storage The password we use to authenticate a user when using a SimpleBind request is userPassword. Ther eis no requirement that it is the attribute to use, per RFC 4513, appendix B.</description>
    </item>
    
    <item>
      <title>Basic User Guide</title>
      <link>https://directory.apache.org/apacheds/basic-user-guide.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/basic-user-guide.html</guid>
      <description>ApacheDS v2.0 Basic User&amp;rsquo;s Guide This guide is primarily for people new to ApacheDS 2.0. If you plan to use the server as is, maybe even for your first LDAP experience, you&amp;rsquo;ll (hopefully) find all information necessary to do so. Only basic configuration tasks are covered. Learn more about the options you have (and many other things) in the ApacheDS v2.0 Advanced User&amp;rsquo;s Guide.
LDAP is a complex set of technology, Apache Directory Server is offering more than just LDAP, so it&amp;rsquo;s good to get a quick grip on the server.</description>
    </item>
    
    <item>
      <title>Coding Standards</title>
      <link>https://directory.apache.org/apacheds/coding-standards.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/coding-standards.html</guid>
      <description>Coding Standards Welcome to you fellow developer. You&amp;rsquo;ve maybe been elected committer on the project, or want to contribute some code / patch? This is great news! However, in order to be able to share your &amp;lsquo;vision&amp;rsquo; with your code, some rules must be followed.
Hey, remember that those rules are not the best nor the worst, they are pretty much what they are for historical reasons, or for technical reasons, however, please, accept them as they are, and avoid religious war (please, oh please, no mail to say &amp;ldquo;WTF ?</description>
    </item>
    
    <item>
      <title>Developers Guide</title>
      <link>https://directory.apache.org/apacheds/developer-guide.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/developer-guide.html</guid>
      <description>Developers Guide Getting the source, Building the trunks To get the source, build the trunks and get along with Maven, follow the instruction given in this page: AUG : 0.2. Building trunks
Versioning Scheme The version number of ApacheDS has the following form:
&amp;lt;major.&amp;lt;minor.&amp;lt;micro \[-M&amp;lt;milestone number or -RC&amp;lt;release candidate number]  This scheme has three number components:
 The major number increases when there are incompatible changes in the API. The minor number increases when a new feature is introduced.</description>
    </item>
    
    <item>
      <title>Download for Sources</title>
      <link>https://directory.apache.org/apacheds/download/download-sources.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/download/download-sources.html</guid>
      <description>Download for Sources  [if-any logo]  [end] We suggest the following mirror site for your download:      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-parent-2.0.0.AM26-source-release.zip    [ASC-SHA512]     &amp;nbsp;
 Other mirrors: [if-any http] [for http][http][end]  [end] [if-any ftp] [for ftp][ftp][end]  [end] [if-any backup] [for backup][backup] (backup)[end]  [end]    We encourage you to verify the integrity of the downloaded file using:  the ASC file (OpenPGP compatible signature) with the KEYS file (code signing keys used to sign the product) the SHA256 or SHA512 files (checksum).</description>
    </item>
    
    <item>
      <title>Download for Windows</title>
      <link>https://directory.apache.org/apacheds/download/download-windows.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/download/download-windows.html</guid>
      <description>Download for Windows  [if-any logo]  [end] We suggest the following mirror site for your download:      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26.exe    [ASC-SHA256-SHA512]     &amp;nbsp;
 Other mirrors: [if-any http] [for http][http][end]  [end] [if-any ftp] [for ftp][ftp][end]  [end] [if-any backup] [for backup][backup] (backup)[end]  [end]    We encourage you to verify the integrity of the downloaded file using:  the ASC file (OpenPGP compatible signature) with the KEYS file (code signing keys used to sign the product) the SHA256 or SHA512 files (checksum).</description>
    </item>
    
    <item>
      <title>Download Old Versions</title>
      <link>https://directory.apache.org/apacheds/download-old-versions.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/download-old-versions.html</guid>
      <description>Download Old Versions ApacheDS 2.0     Version Download Link Date     ApacheDS 2.0.0-M25 Download, Javadoc, Xref 18/Aug/2018   ApacheDS 2.0.0-M24 Download, Javadoc, Xref 07/Jun/2017   ApacheDS 2.0.0-M23 Download, Javadoc, Xref 22/Jul/2016   ApacheDS 2.0.0-M22 Download, Javadoc, Xref 21/Dec/2015   ApacheDS 2.0.0-M20 Download, Javadoc, Xref 02/May/2015   ApacheDS 2.0.0-M19 Download, Javadoc, Xref 22/Nov/2014   ApacheDS 2.0.0-M18 Download, Javadoc, Xref 13/Nov/2014   ApacheDS 2.</description>
    </item>
    
    <item>
      <title>Downloads</title>
      <link>https://directory.apache.org/apacheds/downloads.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/downloads.html</guid>
      <description>Downloads ApacheDS is an extensible and embeddable directory server entirely written in Java, which has been certified LDAPv3 compatible by the Open Group. Besides LDAP it supports Kerberos 5 and the Change Password Protocol. It has been designed to introduce triggers, stored procedures, queues and views to the world of LDAP which has lacked these rich constructs.
ApacheDS is a multi-platform application and runs on Mac OS X, Linux and Windows.</description>
    </item>
    
    <item>
      <title>Downloads for Archive</title>
      <link>https://directory.apache.org/apacheds/download/download-archive.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/download/download-archive.html</guid>
      <description>Downloads for Archive  [if-any logo]  [end] We suggest the following mirror site for your download: ZIP Archive      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26.zip    [ASC-SHA256-SHA512]     TAR.GZ Archive      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26.tar.gz    [ASC-SHA256-SHA512]     &amp;nbsp;
 Other mirrors: [if-any http] [for http][http][end]  [end] [if-any ftp] [for ftp][ftp][end]  [end] [if-any backup] [for backup][backup] (backup)[end]  [end]    We encourage you to verify the integrity of the downloaded file using:  the ASC file (OpenPGP compatible signature) with the KEYS file (code signing keys used to sign the product) the SHA256 or SHA512 files (checksum).</description>
    </item>
    
    <item>
      <title>Downloads for Linux Binary Installer</title>
      <link>https://directory.apache.org/apacheds/download/download-linux-bin.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/download/download-linux-bin.html</guid>
      <description>Downloads for Linux Binary Installer  [if-any logo]  [end] We suggest the following mirror site for your download: Linux Binary Installer 64 bit      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26-64bit.bin    [ASC-SHA256-SHA512]     Linux Binary Installer 32 bit      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26-32bit.bin    [ASC-SHA256-SHA512]     &amp;nbsp;
 Other mirrors: [if-any http] [for http][http][end]  [end] [if-any ftp] [for ftp][ftp][end]  [end] [if-any backup] [for backup][backup] (backup)[end]  [end]    We encourage you to verify the integrity of the downloaded file using:  the ASC file (OpenPGP compatible signature) with the KEYS file (code signing keys used to sign the product) the SHA256 or SHA512 files (checksum).</description>
    </item>
    
    <item>
      <title>Downloads for Linux Debian Package</title>
      <link>https://directory.apache.org/apacheds/download/download-linux-deb.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/download/download-linux-deb.html</guid>
      <description>Downloads for Linux Debian Package  [if-any logo]  [end] We suggest the following mirror site for your download: Linux Debian Package 64 bit      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26-amd64.deb    [ASC-SHA256-SHA512]     Linux Debian Package 32 bit      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26-i386.deb    [ASC-SHA256-SHA512]     &amp;nbsp;
 Other mirrors: [if-any http] [for http][http][end]  [end] [if-any ftp] [for ftp][ftp][end]  [end] [if-any backup] [for backup][backup] (backup)[end]  [end]    We encourage you to verify the integrity of the downloaded file using:  the ASC file (OpenPGP compatible signature) with the KEYS file (code signing keys used to sign the product) the SHA256 or SHA512 files (checksum).</description>
    </item>
    
    <item>
      <title>Downloads for Linux RPM Package</title>
      <link>https://directory.apache.org/apacheds/download/download-linux-rpm.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/download/download-linux-rpm.html</guid>
      <description>Download for Linux RPM Package  [if-any logo]  [end] We suggest the following mirror site for your download: Linux RPM Package 64 bit      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26-x86_64.rpm    [ASC-SHA256-SHA512]     Linux RPM Package 32 bit      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26-i386.rpm    [ASC-SHA256-SHA512]     &amp;nbsp;
 Other mirrors: [if-any http] [for http][http][end]  [end] [if-any ftp] [for ftp][ftp][end]  [end] [if-any backup] [for backup][backup] (backup)[end]  [end]    We encourage you to verify the integrity of the downloaded file using:  the ASC file (OpenPGP compatible signature) with the KEYS file (code signing keys used to sign the product) the SHA256 or SHA512 files (checksum).</description>
    </item>
    
    <item>
      <title>Downloads for Mac OS X</title>
      <link>https://directory.apache.org/apacheds/download/download-macosx.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/download/download-macosx.html</guid>
      <description>Download for Mac OS X Installer  [if-any logo]  [end] We suggest the following mirror site for your download: Mac OS X Installer 64 bit      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26-64bit.dmg    [ASC-SHA256-SHA512]     Mac OS X Installer 32 bit      &amp;nbsp;   [preferred]/&amp;#91;...&amp;#93;/apacheds-2.0.0.AM26-32bit.dmg    [ASC-SHA256-SHA512]     &amp;nbsp;
 Other mirrors: [if-any http] [for http][http][end]  [end] [if-any ftp] [for ftp][ftp][end]  [end] [if-any backup] [for backup][backup] (backup)[end]  [end]    We encourage you to verify the integrity of the downloaded file using:  the ASC file (OpenPGP compatible signature) with the KEYS file (code signing keys used to sign the product) the SHA256 or SHA512 files (checksum).</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://directory.apache.org/apacheds/features.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/features.html</guid>
      <description>ApacheDS Features The Apache Directory Server is an embeddable LDAP server implemented in pure Java. It has several features that make it unique among LDAP servers. Some of these featurea are as follows:
 Designed as an LDAP and X.500 platform; plugable components and subsystems make ApacheDS extremely modular and ideal for experiments with various aspects of the LDAP protocol. The server&amp;rsquo;s frontend is completely separable from its backend and vice-versa making it very flexible for implementing virtual directories, proxy servers and gateways to X.</description>
    </item>
    
    <item>
      <title>Kerberos User Guide</title>
      <link>https://directory.apache.org/apacheds/kerberos-user-guide.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/kerberos-user-guide.html</guid>
      <description>ApacheDS 2.0 Kerberos User Guide This guide will help you to configure and use the embedded Kerberos Server.
ApacheDS is not only a LDAP server, it also support the Kerberos Protocl, and is a KDC (Key DIstribution Center), containing a TGS (Ticket Granting Server) and a AS (Authentication Server).
This guide will describe how it works.
Table of content  1 - What is Kerberos  1.1 - Introduction  1.</description>
    </item>
    
    <item>
      <title>News</title>
      <link>https://directory.apache.org/apacheds/news.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/news.html</guid>
      <description>News ApacheDS 2.0.0.AM26 released posted on March 7th, 2020 The Apache Directory team is pleased to announce the release of ApacheDS 2.0.0.AM26, the 26th milestone towards a 2.0 version.
ApacheDS is an extensible and embeddable directory server entirely written in Java, which has been certified LDAPv3 compatible by the Open Group. Besides LDAP it supports Kerberos 5 and the Change Password Protocol. It has been designed to introduce triggers, stored procedures, queues and views to the world of LDAP which has lacked these rich constructs.</description>
    </item>
    
    <item>
      <title>Packaging</title>
      <link>https://directory.apache.org/apacheds/internal-design-guide/packaging/packaging.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/internal-design-guide/packaging/packaging.html</guid>
      <description>Packaging </description>
    </item>
    
    <item>
      <title>Production Readiness</title>
      <link>https://directory.apache.org/apacheds/production-readiness.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/production-readiness.html</guid>
      <description>Production Readiness Due to some critical issues related to data corruption, we are not considering Apache Directory Server to be production ready. This is a well known issue, which is quite complicated to fix. We had added some repair command to work around the problem, but this is is just a workaround, and we know it won&amp;rsquo;t fix all the data corruptions.
Would you decide to use Apache Directory Server in production, we would strongly suggest two things:</description>
    </item>
    
    <item>
      <title>Welcome to ApacheDS</title>
      <link>https://directory.apache.org/apacheds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://directory.apache.org/apacheds/</guid>
      <description>ApacheDS&amp;trade; LDAP and Kerberos server written in Java ApacheDS&amp;trade; is an extensible and embeddable directory server entirely written in Java, which has been certified LDAPv3 compatible by the Open Group. Besides LDAP it supports Kerberos 5 and the Change Password Protocol. It has been designed to introduce triggers, stored procedures, queues and views to the world of LDAP which has lacked these rich constructs. Download
ApacheDS 2.0.0.AM26     LDAPv3 Compliant Since its initial version, ApacheDS has been certified by the Open Group which guarantees conformance of directory servers to version 3 of the LDAP protocol.</description>
    </item>
    
  </channel>
</rss>