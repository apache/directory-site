Title: 4.3. Password Policy
NavPrev: 4.2-authorization.html
NavPrevText:4.2 - Authorization
NavUp: 4-authentication-and-authorization.html
NavPrevText: 4 - Authentication & Authorization
NavNext: 5-administration.html
NavNextTest: 5 - Administration
Notice: Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at
    .
    http://www.apache.org/licenses/LICENSE-2.0
    .
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

# 4.3. Password Policy

The **Password Policy** is a **RFC** draft that has been designed for the very first version in 1999, and the latest version is from 2009. Although it's still a draft, and it's currently noted as inactive, it has been implemented by many existing **LDAP** servers.

**ApacheDS** implements the draft fully.

## What is a password policy ?

As explained on [wikipedia](http://en.wikipedia.org/wiki/Password_policy) :

	:::Text
	A password policy is a set of rules designed to enhance computer security by encouraging users to employ strong passwords and use them properly.

Basically, the system, once activated, will enforce some rules and check the password strength. We will list the various options in this chapter.

## How do we configure it ?

The _PasswordPolicy_ can be configured in two ways. First of all, it's important to know that it's activated by default. let's see the default configuration first.

There is an entry contianing all the default values for the _PasswordPolicy_, under :

	* ou=config
		* ads-directoryServiceId=<default>
			* ou=interceptors
				* ads-interceptorId=authenticationInterceptor
					* ou=passwordPolicies

This entry contains the following values :

	:::Text
	dn: ads-pwdId=default,ou=passwordPolicies,ads-interceptorId=authenticationIn
	 terceptor,ou=interceptors,ads-directoryServiceId=default,ou=config
	objectclass: top
	objectclass: ads-base
	objectclass: ads-passwordPolicy
	ads-pwdattribute: userPassword
	ads-pwdid: default
	ads-enabled: TRUE
	ads-pwdallowuserchange: TRUE
	ads-pwdcheckquality: 1
	ads-pwdexpirewarning: 600
	ads-pwdfailurecountinterval: 30
	ads-pwdgraceauthnlimit: 5
	ads-pwdgraceexpire: 0
	ads-pwdinhistory: 5
	ads-pwdlockout: TRUE
	ads-pwdlockoutduration: 0
	ads-pwdmaxage: 0
	ads-pwdmaxdelay: 0
	ads-pwdmaxfailure: 5
	ads-pwdmaxidle: 0
	ads-pwdmaxlength: 0
	ads-pwdminage: 0
	ads-pwdmindelay: 0
	ads-pwdminlength: 5
	ads-pwdmustchange: FALSE
	ads-pwdsafemodify: FALSE


#### Disabling the PasswordPolicy

The _PasswordPolicy_ is enabled by default. It's possible to disable it by setting the _ads-enabled_ value to FALSE, with a server restart.

### Password guessing limit

The idea is to protect the password against multiple guess attempts. The following rules are applied :

	* a counter track the failed attemps, and block when it's reached
	* an incremental delay is added after a failure before a new attempt can be done
	* a global delay for all the failed attempt is used, when reached, the account is blocked
	
When the account is locked, it can remain locked, or be unlocked after a grace period.

#### Attempts counter ()

<DIV class="warn" markdown="1">
Attributes : ads-pwdLockout, ads-pwdmaxfailure
</DIV>

Each failed attempt will be logged in the entry, in the _pwdFailureTime_ Attribute (it will contain the date of the attempt). When the Attribute contains more values than the maximum number of failed attempts, the entry will be locked (the _pwdAccountLockedTime_ Attribute will contain the date the entry has been locked).

<DIV class="warn" markdown="1">
In order to activate this control the ads-pwdLockout parameter must be set to TRUE.
</DIV>

The following table expose the various possible cases, with three failed attempts : 

| _ads-pwdmaxfailure_ | _pwdLockout_ | _pwdFailureTime_ | _pwdAccountLockedTime_ | Locked | Comment |
|---|---|---|---|---|---|
| 3 | true | date1 | - | No | Failure 1 |
|  |  | date1, date2 | - | No | Failure 2 |
|  |  | date1, date2, date3 | date3 | Yes | Failure 3 : account locked |
| 3 | false | date1 | - | No | Failure 1 |
|  |  | date1, date2 | - | No | Failure 2 |
|  |  | date1, date2, date3 | - | No | Failure 3 |

As we can see, the account is locked only when we reach the number of failure, and the _pwdLockout_ flag is TRUE.

