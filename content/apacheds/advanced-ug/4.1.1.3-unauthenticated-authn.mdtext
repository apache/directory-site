Title: 4.1.1.3 Unauthenticated Authentication
NavPrev: 4.1.1.2-name-password-authn.html
NavPrevText: 4.1.1.2 - Name/Password Authentication
NavUp: 4.1.1-simple-authn.html
NavUpText: 4.1.1 - Simple authentication
NavNext: 4.1.3-sasl-authn.html
NavNextText: 4.1.2 - SASL authentication
Notice: Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at
    .
    http://www.apache.org/licenses/LICENSE-2.0
    .
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

# 4.1.1.3 - Unauthenticated Authentication

The **Unauthenticated Authentication** mechanism is a bit specific. First of all, none all the **LDAP** servers support such a mechanism. In fact, the default behavior is for server to return a **unwillingToPerform** result code when someone tries to bind using a null password.

We won't go any deeper into this 'feature', those interested in the rational behind it and the associated drawbacks can read the following links :

  [RFC 4513, Unauthenticated Authentication Mechanism of Simple Bind](http://tools.ietf.org/html/rfc4513#section-5.1.2)
and
  [RFC 4513, Unauthenticated Mechanism Security Considerations](http://tools.ietf.org/html/rfc4513#section-6.3.1)