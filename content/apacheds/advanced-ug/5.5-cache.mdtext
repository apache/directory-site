Title: 5.5 - Cache
NavPrev: 5.4-replication.html
NavPrevText: 5.4 - Replication
NavUp: 5-administration.html
NavUpText: 5 - Administration
NavNext: 6-implementing-interceptor.html
NavNextText: 6 - Implementing a simple custom Interceptor for ApacheDS
Notice: Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at
    .
    http://www.apache.org/licenses/LICENSE-2.0
    .
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

# 5.5 - Cache

We use many caches in *ApacheDS*. Here is a list of all the existing caches :

* aliasCache<String, DN> : It caches aliases, using the _entryUUID_ as a key (AbstractBTreePartition)
* piarCache<String, ParentIdAndRdn>  : It caches RDN and their parent, using the _entryUUID_ as a key (AbstractBTreePartition)
* EntryDN cache : Cache Entry's DN using the _entryUUID_ as a key (AbstractBTreePartition)
* entryCache (JDBMPartition, MavibotPartition) : Caches the full entries, using their _entryUUID_ as keys.
* masterTableCache (MavibotPartition) : 
* kdcReplayCache (KdcServer) : 
* changePwdReplayCache (ChangePasswordServer) :
* groupCache (GroupCache) :
* dnCache (DefaultDnFactory) : 
* Subentry (SubentryCache) use a ConcurrentHashMap 
* As many caches as we have indexes

To be continued...
