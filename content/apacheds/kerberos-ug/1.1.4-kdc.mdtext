Title: 1.1.4 - KDC (Key Distribution Center)
NavPrev: 1.1.3-keys.html
NavPrevText: 1.1.3 - Keys
NavUp: 1.1-introduction.html
NavUpText: 1.1 - Introduction
NavNext: 1.1.5-database.html
NavNextText: 1.1.5 - Database
Notice: Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at
    .
    http://www.apache.org/licenses/LICENSE-2.0
    .
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

# 1.1.4 - KDC (Key Distribution Center)

The **KDC** contains three components :
* the Authentication Server
* the database (ApacheDS)
* and the Ticket Granting Server

The **KDC** role is to distribute tickets and to authenticate users, based on the informations stored into its database.

In some way, the **Apache Kerberos Server** is a **KDC**.

<DIV class="info" markdown="1">
We could allow the **Kerberos Server** to manage more than one **KDC**, but this is not currently possible.
</DIV>

The **KDC** is associated with a **Realm**.

The following schema expose the way the **KDC** works :

<DIV align="center">
![KDC usage](images/kerberos-auth.png)
</DIV>

In order to use a service, the client will grab a ticket for this service on the **KDC**. This requires a two steps process, where the client first authenticate, and then get back a ticket to use with the targeted server.

In the previous schema, the **TGS** is a service that will expect a Ticket to be delivered in order to generate new tickets for any other services. It can sound weird that the authentication process does not deliver a Ticket for the targeted server, but there is no reason for the Autehntication Server to be the same server than the Ticket Granting Server.
