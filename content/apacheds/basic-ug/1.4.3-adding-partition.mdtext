Title: 1.4.3 - Adding your own partition resp. suffix
NavPrev: 1.4.2-changing-admin-password.html
NavprevText: 1.4.2 - Changing the admin password
NavUp: 1.4-basic-configuration-tasks.html
NavUpText: 1.4 - Basic configuration tasks
NavNext: 1.4.4-configure-logging.html
NavNextText: 1.4.4 - Configure logging
Notice: Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at
    .
    http://www.apache.org/licenses/LICENSE-2.0
    .
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

# 1.4.3 - Adding your own partition resp. suffix

This section describes how to add your own data partition.

[TOC]

## What are partitions?

In ApacheDS entries are stored in partitions.  Each partition contains a complete entry tree, also referred to as a DIT. Multiple partitions may exist and the entry trees they contain are disconnected from each other, meaning that changes to entries in partition _A_ would never affect entries in partition _B_. The entries in a particular partition are stored below some naming context called the partition suffix.

The default implementation of partitions is based on [JDBM](http://jdbm.sourceforge.net/) B+Trees (but it's possible to add custom partition implementations). The ApacheDS default configuration contains a a data partition with the suffix "dc=example,dc=com". The image below shows the suffixes of a freshly installed ApacheDS within Apache Directory Studio.

![Partition in studio after installation](images/partitions-in-studio-after-installation.png)

The schema subsystem and ApacheDS itself store their information in special partitions, "ou=schema", "ou=config" and "ou=system" respectively.

## Minimal partition definition

For the examples in the following sections, we want to add a partition with the suffix "o=sevenSeas". This requires editing of the configuration, and injecting a first entry, associated with the root of this partition (here, "o=sevenseas"). This can be done using _Apache Directory Studio_. Open the server configuration :

![Studio Apacheds Configuration](images/studio-apacheds-configuration1.png)

and select the _Partitions_ tab :

![Studio Apacheds Partitions Configuration](images/studio-partitions-configuration.png)

Add another jdbmPartition element for the sevenSeas partition, just below the _example_ partition:

![SevenSeas Partition Creation](images/sevenseas-partition-creation.png)

As you can see, we have modified the _ID_ and the _Suffix_, all the other parameters remaining to their default values.

Save the configuration now, and restart the server.

The server has a new suffix now, but no context entry has been created for it. If you connect with an LDAP Browser (Apache Directory Studio for instance), the partition is only visible in the Root DSE. Below the Entry Editor of Directory Studio for the Root DSE after connecting to an ApacheDS instance configured like above.

![RootDSE](images/sevenseas-naming-context.png)

Before using the partition (e.g. adding entries), you have to add a context entry. If you plan to load LDIF data to your partition anyway, simply provide the context entry (the "root" of your partition) as a first data set. In our example it might look like this:

	dn: o=sevenSeas
	o: sevenSeas
	objectClass: top
	objectClass: organization
	description: The context entry for suffix o=sevenSeas

It is also possible to import a file to ApacheDS which only contains such an entry, of cause. Here is an example on how to procede for the seven seas :

In the LDAP Browser of Directory Studio, right click on the DIT entry and select "Import \-> LDIF Import...". A file selections dialog appears. Browse to the LDIF file and click Finish. The entry (or entries, if you provide more of them) will be added to to partition.

The following image depicts the partitions after reconnecting with Apache Directory Studio (_LDAP Browser_ view).

![Partition in Studio after addition](images/partitions-in-studio-after-addition.png)

## Adding a partition programmatically

The same o=sevenseas partition can be created through the application code using the Partition and DirectoryService API

Here is the sample code to create a new partition o=sevenseas and its context entry programmatically

	:::java
	// Get the SchemaManager, we need it for this addition
	SchemaManager schemaManager = directoryService.getSchemaManager();
	
	// Create the partition
	JdbmPartition sevenseasPartition = new JdbmPartition( schemaManager );
	sevenseasPartition.setId("sevenseas");
	Dn suffixDn = new Dn( schemaManager, "o=sevenseas" );
    sevenseasPartition.setSuffix( suffixDn );
	sevenseasPartition.setCacheSize(1000);
	sevenseasPartition.init(directoryService);
    sevenseasPartition.setPartitionPath( <a path on your disk> );
	
	// Create some indices (optional)
	sevenseasPartition.addindex( new JdbmIndex( "objectClass", false ) );
	sevenseasPartition.addindex( new JdbmIndex( "o", false ) );
	
	// Initialize the partition
	sevenseasPartition.initialize();
	
	// create the context entry
	Entry contextEntry = new DefaultEntry( schemaManager, "o=sevenseas",
		"objectClass: top", 
		"objectClass: organization",
		"o: sevenseas" );
	
	// add the context entry
    sevenseasPartition.add( new AddOperationContext( null, entry ) );
	
	// We are done !

## More configuration options for a JDBM partition

Here is a list of the used attributes, their default values and meaning :

| Property | Description | Default Value | Required |
|:-:|:-:|:-:|:-:|
| ads-partitionId | Uniquely identifies the partition | N/A | yes |
| ads-partitionSuffix | A DN ("dc=example, dc=com", for instance | N/A | yes |
| ads-contextEntry | The context entry | Will be automatically deduced if no value is provided | no |
| ads-optimizerEnabled | Tells the server to turn on the optimizer | true | no |
| ads-partitionCacheSize | The cache size (only for JDBM partitions) | -1 (no cache) | no |
| ads-partitionSyncOnWrite | Syncs disks on every write operation | true | no |
